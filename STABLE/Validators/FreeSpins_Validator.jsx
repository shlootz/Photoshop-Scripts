if (typeof FREESPINS_VALIDATOR !== "object") {    FREESPINS_VALIDATOR = {};}(function () {        if (typeof FREESPINS_VALIDATOR.validate !== "function") {        meta = {    // table of character substitutions            "\b": "\\b",            "\t": "\\t",            "\n": "\\n",            "\f": "\\f",            "\r": "\\r",            "\"": "\\\"",            "\\": "\\\\"        };        FREESPINS_VALIDATOR.validate = function (mode, json){        switch (mode){               case "desktop":                    DESKTOP_MODEL.populate();                    return validate(json, DESKTOP_MODEL);                    break;                               case "mobile_portrait":                    PORTRAIT_MODEL.populate();                    return validate(json, PORTRAIT_MODEL);                    break;                                case "mobile_landscape":                    LANDSCAPE_MODEL.populate();                     return validate(json, LANDSCAPE_MODEL);                    break;                                default:                    confirm ("File name missing 'desktop', 'mobile_portrait' or 'mobile_landscape' Continue?", true, "No validator for this file.");                    if(!result) {                                 return "canceled";                             }                    break;            }        }    }    function validate(json, model){                    var passes = [true];            var slots = json["slots"];                        for(var key in slots){                   var depth = slots[key]["layer"].replace(/[^\/]/g, "").length;                   var tree = slots[key]["layer"].split("/");                   var root = tree[0];                }                        for(var i = 0; i<model.layers.length; i++){                var found = false;                 for(var key in slots){                          if(model.layers[i] === slots[key]["layer"]){                              found = true;                          }                     }                 if(!found){                    var result = confirm ("You are missing the "+model.layers[i]+" group from your file! Continue?", true, "Missing Photoshop Groups");                             if(!result) {                                 return "canceled";                             }                    }                 passes.push(found);                 }                        return evaluate(passes);        }        function evaluate(passes){        var result = true;        for (var i = 0; i<passes.length; i++){            if(passes[i] === false){                    result = false;                }            }                return result;        }   })();//////////////// MODELS //////////////////////////////// DESKTOP ///////////////DESKTOP_MODEL = {};DESKTOP_MODEL.populate = function(){        var layers=[];    //fail test    layers.push("SymbolsOverground/FreeSpins/");    layers.push("SpecialMessagesModuleAssets/spineBigWinAnimation/");    layers.push("Logo/FreeSpins/");    layers.push("freeSpinsPopupExtra/popup/dialogueBox/continueBtn_button/up/");    layers.push("freeSpinsPopupExtra/popup/dialogueBox/continueBtn_button/over/");    layers.push("freeSpinsPopupExtra/popup/dialogueBox/continueBtn_button/down/");    layers.push("freeSpinsPopupExtra/popup/dialogueBox/continueBtn_button/disable/");    layers.push("freeSpinsPopupExtra/backgroundContainer");    layers.push("freeSpinsPopupEnd");    layers.push("freeSpinsPopupStart");    layers.push("BackgroundModuleAssets/FreeSpins");        layers.push("WideBackground/FreeSpins/");        DESKTOP_MODEL.layers = layers;    }//////////////// LANDSCAPE MOBILE ///////////////LANDSCAPE_MODEL = {};LANDSCAPE_MODEL.populate = function(){        var layers=[];    //fail test    layers.push("SymbolsOverground/Main_landscape/FreeSpins/");    layers.push("SpecialMessagesModuleAssets/spineBigWinAnimation/");    layers.push("Logo/FreeSpins/");    layers.push("freeSpinsPopupExtra/Main_landscape/popup/dialogueBox/continueBtn_button/up/");    layers.push("freeSpinsPopupExtra/Main_landscape/popup/dialogueBox/continueBtn_button/over/");    layers.push("freeSpinsPopupExtra/Main_landscape/popup/dialogueBox/continueBtn_button/down/");    layers.push("freeSpinsPopupExtra/Main_landscape/popup/dialogueBox/continueBtn_button/disable/");    layers.push("freeSpinsPopupExtra/backgroundContainer");    layers.push("freeSpinsPopupEnd");    layers.push("freeSpinsPopupStart");    layers.push("BackgroundModuleAssets/Main_landscape/FreeSpins");        layers.push("WideBackground/Main_landscape/FreeSpins/");        LANDSCAPE_MODEL.layers = layers;    }//////////////// PORTRAIT MOBILE ///////////////PORTRAIT_MODEL = {};PORTRAIT_MODEL.populate = function(){        var layers=[];    //fail test    layers.push("SymbolsOverground/Main_portrait/FreeSpins/");    layers.push("SpecialMessagesModuleAssets/spineBigWinAnimation/");    layers.push("Logo/FreeSpins/");    layers.push("freeSpinsPopupExtra/Main_portrait/popup/dialogueBox/continueBtn_button/up/");    layers.push("freeSpinsPopupExtra/Main_portrait/popup/dialogueBox/continueBtn_button/over/");    layers.push("freeSpinsPopupExtra/Main_portrait/popup/dialogueBox/continueBtn_button/down/");    layers.push("freeSpinsPopupExtra/Main_portrait/popup/dialogueBox/continueBtn_button/disable/");    layers.push("freeSpinsPopupExtra/backgroundContainer");    layers.push("freeSpinsPopupEnd");    layers.push("freeSpinsPopupStart");    layers.push("BackgroundModuleAssets/Main_portrait/FreeSpins");        layers.push("WideBackground/Main_portrait/FreeSpins/");    layers.push("gamePlayButtons/Main_portrait/gameplayButtonsContainer/portraitBGContainer");        PORTRAIT_MODEL.layers = layers;    }