//----------------------------------------------------------------------------// AtlasMaker// ExportOrderWindow - This window lets the user specify the order of images// in the export file. That way you can keep logically consecutive images// together, no matter where they are on the atlas//// Author: Richard Dare// richardjdare@googlemail.com// http://richardjdare.com //----------------------------------------------------------------------------#include "ImageInfo.jsx"//----------------------------------------------------------------------------// ExportOrderWindow()//----------------------------------------------------------------------------function ExportOrderWindow(){    this.mainWindow;    this.exportImages=[];    this.orderBox;    this.orderChanged;    this.Open = function(exportList){         // rjd: This is a bit crap. need deep copy        this.exportImages = eval(exportList.toSource());        this.exportImages.sort(this.SortByExportIdx);          this.orderChanged = false;        this.CreateUI();        this.mainWindow.show();	};		//------------------------------------------------------------------------	// CreateUI() - create export order window +  buttons	//------------------------------------------------------------------------	this.CreateUI = function(){		this.mainWindow =new Window('dialog', "re-order export files");		this.mainWindow.alignChildren = "fill";		this.mainWindow.mainPanel = this.mainWindow.add("panel");		this.mainWindow.mainPanel.orientation = "row";				var mainPanelRef = this.mainWindow.mainPanel;			//	mainPanelRef.leftCol = mainPanelRef.add("panel");		//mainPanelRef.leftCol.preferredSize = [200,400];		mainPanelRef.orderBox = mainPanelRef.add("listbox",undefined, '', {multiselect: true});		mainPanelRef.orderBox.preferredSize = [200,400];		mainPanelRef.orderBox.navItems = new Array();		this.orderBox = mainPanelRef.orderBox;		for(var i in this.exportImages)		{			mainPanelRef.orderBox.navItems[i] = mainPanelRef.orderBox.add("item",""+this.exportImages[i].fileName);		}				mainPanelRef.rightCol = mainPanelRef.add("panel");		mainPanelRef.rightCol.preferredSize = [100,400];		mainPanelRef.rightCol.upButton = mainPanelRef.rightCol.add("button",undefined,"up");		mainPanelRef.rightCol.upButton.onClick = this.OnUpButton;		mainPanelRef.rightCol.downButton = mainPanelRef.rightCol.add("button",undefined,"down");		mainPanelRef.rightCol.downButton.onClick = this.OnDownButton;				// kludge!		mainPanelRef.rightCol.upButton.context = this;		mainPanelRef.rightCol.downButton.context =this;		this.mainWindow.bottomPanel = this.mainWindow.add("group");		this.mainWindow.bottomPanel.orientation="row";		this.mainWindow.bottomPanel.alignment="right";		this.mainWindow.bottomPanel.okButton = this.mainWindow.bottomPanel.add("button",undefined,"Ok");		this.mainWindow.bottomPanel.okButton.onClick = this.OnOkButton;		this.mainWindow.bottomPanel.okButton.context = this;				this.mainWindow.bottomPanel.cancelButton = this.mainWindow.bottomPanel.add("button",undefined,"Cancel");		this.mainWindow.bottomPanel.cancelButton.onClick = this.OnCancelButton;	};	//------------------------------------------------------------------------	// OnUpButton()	//------------------------------------------------------------------------	this.OnUpButton = function(){		var selection = this.context.GetSelected();		var orderBox = this.context.orderBox;				if(selection[0]>0)		{            this.context.ClearSelection();            var toBeMoved = orderBox.navItems[(selection[0]-1)].text;            for(var i=selection[0];i<=selection[1];i++)            {                var x = orderBox.navItems[i].text;                orderBox.navItems[i-1].text = x;            }            orderBox.navItems[(selection[1])].text = toBeMoved;            for(var i=selection[0]-1;i<selection[1];i++)                orderBox.navItems[i].selected = true;		}	};	//------------------------------------------------------------------------	// OnDownButton()	//------------------------------------------------------------------------	this.OnDownButton = function(){		var selection = this.context.GetSelected();		var orderBox = this.context.orderBox;				if(selection[1] < orderBox.navItems.length-1)		{			this.context.ClearSelection();			var v = parseInt(selection[1]) + 1;			var toBeMoved = orderBox.navItems[v].text;						for(var i=selection[1];i>=selection[0];i--)			{				var x = orderBox.navItems[i].text;				orderBox.navItems[parseInt(i)+1].text = x;			}			orderBox.navItems[(selection[0])].text = toBeMoved;				for(var i=parseInt(selection[0])+1;i<=parseInt(selection[1])+1;i++)				orderBox.navItems[i].selected = true;		}	};	//------------------------------------------------------------------------	// OnOkButton()	//------------------------------------------------------------------------	this.OnOkButton = function(){		//save changes to image list		var orderBox = this.context.orderBox;		var imageArray=this.context.exportImages;				for(var i in orderBox.navItems)		{			var s = orderBox.navItems[i].text;			for(var j in imageArray)			{				if(s == imageArray[j].fileName)					imageArray[j].exportIndex = parseInt(i);			}		}        this.context.orderChanged = true;        this.context.mainWindow.close();	};	//------------------------------------------------------------------------    // OrderWasChanged() - let caller know if export order was changed    //------------------------------------------------------------------------    this.OrderWasChanged = function(){        return this.orderChanged;    };	//------------------------------------------------------------------------	// GetReorderedImages() Let the caller retrieve reordered images	//------------------------------------------------------------------------    this.GetReorderedImages = function(){        return this.exportImages;    };	//------------------------------------------------------------------------	// GetSelected() - return an array containing the top and bottom of an 	//  orderbox selection	//------------------------------------------------------------------------	this.GetSelected = function(){		var topItem=-1;		var bottomItem=-1;		for(var i in this.orderBox.navItems)		{			if(this.orderBox.navItems[i].selected)			{				if(topItem==-1)				{					topItem = i;					bottomItem=i;				}				else					bottomItem = i; 			}		}		return [parseInt(topItem),parseInt(bottomItem)];	};	//------------------------------------------------------------------------	// ClearSelection()	//------------------------------------------------------------------------	this.ClearSelection = function(){		for(var i in this.orderBox.navItems)			this.orderBox.navItems[i].selected = false;	};	//------------------------------------------------------------------------	// SortByExportIdx - sort the image directory by export order	//------------------------------------------------------------------------	this.SortByExportIdx = function(a,b){		if(a.exportIndex>b.exportIndex)			return 1;		if(a.exportIndex<b.exportIndex)			return -1;		return 0;	};};